import numpy as np
import sympy as sp

#===============================================================================
# 矩阵的特征值求解，特征矩阵求法
#===============================================================================
num=[[3,2,4],[2,0,2],[4,2,3]]
num=[[-1,1,0],
[-4,3,0],
[1,0,2]]
def test_math():
    x=np.array(num)
    a,b=np.linalg.eig(x)
    #===============================================================================
    # b中特征向量为列向量 
    # [-1.  8. -1.] 
    # [[-0.74535599  0.66666667 -0.20756326]
    # [ 0.2981424   0.33333333 -0.77602137]
    # [ 0.59628479  0.66666667  0.59557394]]
    
    # [-0.74535599, 0.2981424,0.59628479]为特征值-1的特征向量
    #===============================================================================
    print(a,'\n', b)

#===============================================================================
# 矩阵奇异值分解
#===============================================================================
def math_test2():
    x=np.array(num)
    U,sigma,VT=np.linalg.svd(x)
    print(U)
    print(sigma)
    print(VT)
    
if __name__ == '__main__':
#     test_math()
#     math_test2()
    x = sp.symbols('x')
    value=1.2
    print(sp.integrate(x**2, (x, 0, 4)))
    vv = 0.0 + sp.integrate(x**2, (x, 0, 4))
    print(vv)
    print(type(vv))
#     print(sp.integrate(sp.sin(x), (x, 0, sp.pi/2)))
    
    